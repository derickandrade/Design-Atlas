import{_ as a,c as o,o as t,ag as d}from"./chunks/framework.-tXfabtl.js";const w=JSON.parse('{"title":"Box-shadow","description":"","frontmatter":{},"headers":[],"relativePath":"design-tokens/box-shadow.md","filePath":"design-tokens/box-shadow.md"}'),s={name:"design-tokens/box-shadow.md"};function r(h,e,l,n,i,p){return t(),o("div",null,e[0]||(e[0]=[d('<h1 id="box-shadow" tabindex="-1">Box-shadow <a class="header-anchor" href="#box-shadow" aria-label="Permalink to &quot;Box-shadow&quot;">​</a></h1><h2 id="shadow-shorthand" tabindex="-1">Shadow (shorthand) <a class="header-anchor" href="#shadow-shorthand" aria-label="Permalink to &quot;Shadow (shorthand)&quot;">​</a></h2><p>Shadows are used to show depth on the surface of a page. Borders are used alongside shadows to further emphasize the edge of a shape, especially in dark mode, where shadows are far more subtle.</p><p>The &quot;light source&quot; for these shadows is oriented between the top and center of the object which has the shadow applied. There are two levels of shadows in Codex represented as <code>small</code>, <code>medium</code>, and <code>large</code>.</p><ul><li><strong>Small</strong> should be used for elements which other content disappears behind, and are on the lowest possible elevated plane, such as ProgressBars, toolbars, and collapsed headers.</li><li><strong>Medium</strong> should be used for elements which appear overtop of other content, but are triggered from a directly related element on the page, such as Menus.</li><li><strong>Large</strong> should be used for elements which appear overtop of an entire page or surface area, or require extra attention, such as Dialogs, Toasts, previews, and bottom sheets.</li></ul><p><em>Shadow levels should not change when a new plane is created. For example, a Menu which appears within a Dialog should still have a <code>medium</code> box-shadow.</em></p><table tabindex="0"><thead><tr><th>shadow</th><th>Token</th><th>value</th></tr></thead><tbody><tr><td><div class="example" style="box-shadow:var(--shadow-sm);"></div></td><td><code>shadow-sm</code></td><td>0 4px 6px -1px rgb(0 0 0 / 0.1)</td></tr><tr><td><div class="example" style="box-shadow:var(--shadow-md);"></div></td><td><code>shadow-md</code></td><td>0 10px 15px -3px rgb(0 0 0 / 0.1)</td></tr><tr><td><div class="example" style="box-shadow:var(--shadow-xl);"></div></td><td><code>shadow-xl</code></td><td>0 20px 25px -5px rgb(0 0 0 / 0.1)</td></tr><tr><td><div class="example" style="box-shadow:var(--shadow-2xl);"></div></td><td><code>shadow-2xl</code></td><td>0 25px 50px -12px rgb(0 0 0 / 0.25)</td></tr><tr><td><div class="example" style="box-shadow:var(--shadow-inner);"></div></td><td><code>shadow-inner</code></td><td>0 25px 50px -12px rgb(0 0 0 / 0.25)</td></tr></tbody></table>',7)]))}const x=a(s,[["render",r]]);export{w as __pageData,x as default};
